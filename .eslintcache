[{"/Users/user/Desktop/Github/covid-tracker/src/index.js":"1","/Users/user/Desktop/Github/covid-tracker/src/App.js":"2","/Users/user/Desktop/Github/covid-tracker/src/components/index.js":"3","/Users/user/Desktop/Github/covid-tracker/src/components/Chart/Chart.jsx":"4","/Users/user/Desktop/Github/covid-tracker/src/components/Cards/Cards.jsx":"5","/Users/user/Desktop/Github/covid-tracker/src/components/Country/Country.jsx":"6","/Users/user/Desktop/Github/covid-tracker/src/components/Cards/Card/Card.jsx":"7","/Users/user/Desktop/Github/covid-tracker/src/api/index.js":"8","/Users/user/Desktop/Github/covid-tracker/src/components/ChartCountry/ChartCountry.jsx":"9"},{"size":220,"mtime":1608572414850,"results":"10","hashOfConfig":"11"},{"size":1835,"mtime":1609363216898,"results":"12","hashOfConfig":"11"},{"size":226,"mtime":1609363135286,"results":"13","hashOfConfig":"11"},{"size":1444,"mtime":1609266186672,"results":"14","hashOfConfig":"11"},{"size":1455,"mtime":1609269994213,"results":"15","hashOfConfig":"11"},{"size":861,"mtime":1609361879215,"results":"16","hashOfConfig":"11"},{"size":977,"mtime":1608580429895,"results":"17","hashOfConfig":"11"},{"size":1099,"mtime":1609364257289,"results":"18","hashOfConfig":"11"},{"size":2220,"mtime":1609364058097,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1bk1rkm",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/user/Desktop/Github/covid-tracker/src/index.js",[],["41","42"],"/Users/user/Desktop/Github/covid-tracker/src/App.js",["43","44"],"/Users/user/Desktop/Github/covid-tracker/src/components/index.js",[],"/Users/user/Desktop/Github/covid-tracker/src/components/Chart/Chart.jsx",["45"],"import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\n// const dailyData = await fetchDailyData()\n//     console.log(dailyData)\n\nconst Chart = ({ data: {totalConfirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState({})\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n\n            setDailyData(initialDailyData)\n        };\n\n        fetchAPI();\n    }, [])\n\n    const lineChart = (\n        dailyData[0] ? (\n            <Line\n                data={{\n                 labels : dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n                 datasets : [{\n                     data : dailyData.map((data) => data.totalConfirmed),\n                     label : \"Infected\",\n                     borderColor : \"yellow\",\n                     fill : true,\n                 },\n                 {\n                    data : dailyData.map((data) => data.deaths),\n                    label : \"Deaths\",\n                    borderColor : \"red\",\n                    fill : true,\n                }\n                ]   \n                }}\n            />\n        ):null\n    );\n    \n    return(\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\n\nexport default Chart","/Users/user/Desktop/Github/covid-tracker/src/components/Cards/Cards.jsx",["46"],"import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\n    if(!confirmed){\n        return '...loading';\n    }\n\n    return(\n        <div className={styles.container}>\n            {/* <Typography gutterBottom variant='h4' component='h2'>Global</Typography> */}\n            <Grid conatiner spacing={3} justify='center'>\n                <CardComponent\n                    className={styles.infected}\n                    cardTitle=\"Infected\"\n                    value={confirmed.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of active cases from COVID-19.\"\n                />\n                <CardComponent\n                    className={styles.recovered}\n                    cardTitle=\"Recovered\"\n                    value={recovered.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of recoveries from COVID-19.\"\n                />\n                <CardComponent\n                    className={styles.deaths}\n                    cardTitle=\"Deaths\"\n                    value={deaths.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of deaths caused by COVID-19.\"\n                />\n            </Grid>\n        </div>\n    )\n}\n\nexport default Info","/Users/user/Desktop/Github/covid-tracker/src/components/Country/Country.jsx",[],"/Users/user/Desktop/Github/covid-tracker/src/components/Cards/Card/Card.jsx",[],"/Users/user/Desktop/Github/covid-tracker/src/api/index.js",[],"/Users/user/Desktop/Github/covid-tracker/src/components/ChartCountry/ChartCountry.jsx",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":16,"nodeType":"55","messageId":"56","endLine":6,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":36,"column":7,"nodeType":"59","endLine":36,"endColumn":51},{"ruleId":"53","severity":1,"message":"60","line":2,"column":16,"nodeType":"55","messageId":"56","endLine":2,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},{"ruleId":"61","severity":1,"message":"62","line":21,"column":8,"nodeType":"63","endLine":21,"endColumn":10,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":23,"column":11,"nodeType":"55","messageId":"56","endLine":23,"endColumn":20},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Bar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'country'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'lineChart' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [country]",{"range":"71","text":"72"},[602,604],"[country]"]