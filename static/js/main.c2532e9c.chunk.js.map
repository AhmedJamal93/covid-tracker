{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/Country/Country.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","components/ChartCountry/ChartCountry.jsx","images/covid-19.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/Country/Country.module.css","components/Cards/Card/Card.module.css","components/ChartCountry/ChartCountry.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","map","date","reportDate","totalConfirmed","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchAPI","lineChart","labels","Date","toLocaleDateString","datasets","label","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","CardComponent","cardTitle","cardSubtitle","Grid","item","Auto-layout","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","compnent","start","end","duration","separator","Info","conatiner","spacing","justify","infected","ChartCountry","barChart","backgroundColor","options","legend","display","title","text","App","state","dataCountry","setState","this","update","toDateString","image","src","alt","direction","alignItems","xs","Cards","Country","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2532e9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios';\n\nconst url = 'http://covid19.mathdro.id/api'\n\n\n// fetching data from api\nexport const fetchData = async (country) => {\n    let changeableUrl = url\n\n    if (country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl)\n        console.log(confirmed)\n        return{ confirmed, recovered, deaths, lastUpdate }\n    } catch (error) {\n        return error\n    }\n}\n\n// fetching daily data global\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`)\n        return data.map(({ confirmed, deaths, reportDate:date }) => ({ totalConfirmed:confirmed.total, deaths:deaths.total, date }))\n    } catch (error) {\n        return(error)\n    }\n}\n\n// list of countries\nexport const fetchCountries = async () => {\n    try {\n        const { data : { countries }} = await axios.get(`${url}/countries`);\n\n        return countries.map((country) => country.name)\n    } catch (error) {\n        return(error)\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: {totalConfirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState({})\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n\n            setDailyData(initialDailyData)\n        };\n\n        fetchAPI();\n    }, [])\n\n    const lineChart = (\n        dailyData[0] ? (\n            <Line\n                data={{\n                 labels : dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n                 datasets : [{\n                     data : dailyData.map((data) => data.totalConfirmed),\n                     label : \"Infected\",\n                     borderColor :  \"blue\",\n                     fill : true,\n                 },\n                 {\n                    data : dailyData.map((data) => data.deaths),\n                    label : \"Deaths\",\n                    borderColor : \"red\",\n                    fill : true,\n                }\n                ]   \n                }}\n            />\n        ):null\n    );\n    \n    return(\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\n\nexport default Chart","import { React, useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\n\nimport styles from './Country.module.css';\n\nconst Countries = ({handleCountryChange}) => {\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries())\n            \n        };\n\n        fetchAPI()\n        console.log(countries)\n    }, [])\n\n    if(!countries){\n        return '...Loading'\n    }\n\n    return(\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Select Country</option>\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default Countries;","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Card.module.css';\n\nconst CardComponent = ({className, cardTitle, value, lastUpdate, cardSubtitle }) => (\n    <Grid item Auto-layout component={Card} className={cx(styles.card, className)}>\n        <CardContent>\n            <Typography color='textSecondary' gutterBottom>\n                {cardTitle}\n            </Typography>\n            <Typography variant='h5' compnent='h2'>\n                <CountUp start={0} end={value} duration={2.75} separator=\" \" />\n            </Typography>\n            <Typography variant='body2' component='p'>\n                {cardSubtitle}\n            </Typography>\n        </CardContent>\n    </Grid>\n)\n\nexport default CardComponent","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\n\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\n    if(!confirmed){\n        return '...loading';\n    }\n\n    return(\n        <div className={styles.container}>\n            {/* <Typography gutterBottom variant='h4' component='h2'>Global</Typography> */}\n            <Grid conatiner spacing={3} justify='center'>\n                <CardComponent\n                    className={styles.infected}\n                    cardTitle=\"Infected\"\n                    value={confirmed.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of active cases from COVID-19.\"\n                />\n                <CardComponent\n                    className={styles.recovered}\n                    cardTitle=\"Recovered\"\n                    value={recovered.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of recoveries from COVID-19.\"\n                />\n                <CardComponent\n                    className={styles.deaths}\n                    cardTitle=\"Deaths\"\n                    value={deaths.value}\n                    lastUpdate={lastUpdate}\n                    cardSubtitle=\"Number of deaths caused by COVID-19.\"\n                />\n            </Grid>\n        </div>\n    )\n}\n\nexport default Info","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\n\nimport styles from './ChartCountry.module.css';\n\n\nconst ChartCountry = ({ data: {confirmed, recovered, deaths}, country}) => {\n\n    const barChart = (\n        confirmed ? (\n            <Bar \n                data = {{\n                    labels: [\"Infected\",\"Recovered\",\"Deaths\"],\n                    datasets : [\n                        {\n                            label: \"People\",\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                            data: [confirmed.value, recovered.value, deaths.value],\n                            },\n                    ]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}` },\n                  }}\n            />\n        ):null\n    );\n    \n    return(\n        <div className={styles.container}>\n            {barChart}\n        </div>\n    )\n}\n\n\nexport default ChartCountry;","export default __webpack_public_path__ + \"static/media/covid-19.53e44b24.png\";","import { React, Component} from 'react'\n\nimport { Cards, Chart, Country, ChartCountry } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport { Grid } from '@material-ui/core';\nimport image from './images/covid-19.png';\n\n\nclass App extends Component{\n  state = {\n    data:{},\n    dataCountry:{},\n    country:''\n  }\n\n  async componentDidMount(){\n    const data = await fetchData();\n    this.setState({\n      data\n    })\n    console.log(this.state.data)\n  }\n\n  handleCountryChange = async (country) => {\n    const dataCountry = await fetchData(country);\n\n    this.setState({ \n      dataCountry, \n      country: country }, () => {\n\n      });\n    console.log(this.state.dataCountry)\n  }\n\n\n  render(){\n    const {data} = this.state\n    return(\n      <div className={styles.container}>\n        <span className={styles.update}>Last Updated: {new Date(data.lastUpdate).toDateString()}</span>\n        <img className={styles.image} src={image} alt=\"Covid19\" />\n        <Grid \n          container\n          direction=\"column\"\n        >\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"flex-start\"\n          >\n            <h1>WORLDWIDE</h1>\n          </Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n          >\n            <Grid \n              item\n              xs\n            >\n              <Cards className='cards' data={data}/>\n            </Grid>\n            <Grid \n              item\n              xs={10}\n            >\n              <Chart data={data} country={this.state.country} />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n            justify=\"center\"\n          >\n            <Country handleCountryChange={this.handleCountryChange} />\n            <ChartCountry data={this.state.dataCountry} country={this.state.country} />\n          </Grid>\n        </Grid> \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"App_cards__3Hut_\",\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\",\"update\":\"App_update__m5NWp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__3h-YE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__LmsGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChartCountry_container__fUssB\"};"],"sourceRoot":""}